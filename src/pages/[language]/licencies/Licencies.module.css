.last {
    margin-bottom: 100px;
}

.paragraph {
    margin: 20px 0;
}

.mainContainer {
    width: 80%;
    margin: 50px 10%;
    font-size: 1.5rem;
}

.lastContainer {
    width: 80%;
    margin: 50px 10% 150px 10%;
    font-size: 1.5rem;
}

.cardsContainer {
	--card-height: 40vw;
	--card-margin: 4vw;
	--card-top-offset: 2em;
	--numcards: 4;
	--outline-width: 0px;
}

.licenceTitle, .heading {
    margin: 20px 0;
    color: #3d8584;
    font-weight: 600;
}

.cards {
	/*padding-bottom: calc(var(--numcards) * var(--card-top-offset));  Make place at bottom, as items will slide to that position*/
	margin-bottom: 120px; /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
}

.card_1 {
	--index: 1;
}

.card_2 {
	--index: 2;
}

.card_3 {
	--index: 3;
}

.card_4 {
	--index: 4;
}

.card {
	position: sticky; 
	top: 0;
	padding-top: calc(var(--index) * var(--card-top-offset));
}

@supports (animation-timeline: works) {

	/* @scroll-timeline cards-element-scrolls-in-body {
		source: selector(body);
		scroll-offsets:
			selector(#cards) start 1,
			selector(#cards) start 0
		;
		start: selector(#cards) start 1; 
		end: selector(#cards) start 0; 
		time-range: 4s;
	} */

	.card {
		--index0: calc(var(--index) - 1); 
		--reverse-index: calc(var(--numcards) - var(--index0)); 
		--reverse-index0: calc(var(--reverse-index) - 1); 
		list-style: none
	}
	
	.card__content {
		transform-origin: 50% 0%;
		will-change: transform;

		--duration: calc(var(--reverse-index0) * 1s);
		--delay: calc(var(--index0) * 1s);

		animation: var(--duration) linear scale var(--delay) forwards;
		animation-timeline: cards-element-scrolls-in-body;
	}

	@keyframes scale {
		to {
			transform:
				scale(calc(
					1.1
					-
					calc(0.1 * var(--reverse-index))
				));
		}
	}
}

.container {
	width: 80vw;
	margin: 0 auto;
}

.cards {
	list-style: none;
	outline: calc(var(--outline-width) * 10) solid blue;
	
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height));
	gap: var(--card-margin);
}

.card {
	outline: var(--outline-width) solid hotpink;
}

.card__content {
	box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
	background: rgb(255, 255, 255);
	color: rgb(10, 5, 7);
	border-radius: 1em;
	overflow: hidden;

	display: grid;
	grid-template-areas: "text img";
	grid-template-columns: 1fr 1fr;
	grid-template-rows: auto;

	align-items: stretch;
	outline: var(--outline-width) solid lime;
}

.card__content > div {
	grid-area: text;
	width: 80%;
	place-self: center;
	text-align: left;

	display: grid;
	gap: 1em;
	place-items: start;
}

.card__content > figure {
	grid-area: img;
	overflow: hidden;
}

.card__content > figure > img {
	width: 100%;
	height: auto;
	object-fit: cover;
}

.licenceTitle {
	font-weight: 500;
	font-size: 2.5rem;
}

.p {
	font-size: 1.5rem;
}

.btn {
	background: rgb(188 87 36);
	color: rgb(255 255 255);
	text-decoration: none;
	display: inline-block;
	padding: 0.5em;
	border-radius: 0.25em;
}

@media screen and (max-width: 1030px) {
	.licenceTitle {
		font-size: 1.5rem;
	}
	.p {
		font-size: 0.9rem;
	}
}

@media only screen and (max-width: 800px) {
    .mainContainer, .paragraph, .licenceTitle, .lastContainer {
		font-size: 1.2rem;
	}
	.licenceTitle {
		font-size: 2rem;
	}
	.p {
		display: none;
	}
	.container {
		width: 90vw;
		margin: 0 auto;
	}
}

@media only screen and (max-width: 600px) {
    .mainContainer, .paragraph, .licenceTitle, .lastContainer {
		font-size: 1rem;
	}
	.mainContainer {
		margin-bottom: 20px;
	}
	.licenceTitle {
		font-size: 1rem;
	}
	.cards {
		margin-bottom: 170px;
	}
	.paragraph {
		margin: 0;
	}
	.card__content {
		display: grid;
		grid-template-areas: "text img";
		grid-template-columns: 1fr 2fr;
		grid-template-rows: auto;
	}
}

@media  only screen and (max-width: 500px) {
	
	.licenceTitle {
		font-size: 0.9rem;
	}
}

@media only screen and (max-width: 340px) {
    .mainContainer, .paragraph, .licenceTitle, .lastContainer {
		font-size: 0.9rem;
	}
	.licenceTitle {
		font-size: 0.8rem;
	}
}